#!/usr/bin/python3
import json
import os

class varity:
	permissions={}
	sortPer=[]
	hardwareComponent={}
	sortHar=[]
	providers={}
	sortPro=[]
	receivers={}
	sortRec=[]
	services={}
	sortSer=[]
	activities={}
	sortAct=[]
	jsonNum=0

	def __init__(self,jsonsPath):
		jsons=os.listdir(jsonsPath)
		for jsonf in jsons:
			jsonPath=os.path.join(jsonsPath,jsonf)
			if (jsonf[-4:]=='json'):
				jsonName=jsonf[0:-5]
				try:
					self.jsonNum+=1
					with open(jsonPath,'r') as j:
						jsonObj=json.load(j)
						self.perAdd(jsonObj['permissions'])
						self.harAdd(jsonObj['hardwareComponent'])
						self.proAdd(jsonObj['components']['providers'])
						self.recAdd(jsonObj['components']['receivers'])
						self.serAdd(jsonObj['components']['services'])
						self.actAdd(jsonObj['components']['activities'])
				except Exception as e:
					print("!!fail to get",jsonName)
		self.sortData()
	def sortData(self):
		self.sortPer=sorted(self.permissions,key=self.permissions.__getitem__, reverse=True)
		self.sortHar=sorted(self.hardwareComponent,key=self.hardwareComponent.__getitem__, reverse=True)
		self.sortPro=sorted(self.providers,key=self.providers.__getitem__, reverse=True)
		self.sortRec=sorted(self.receivers,key=self.receivers.__getitem__, reverse=True)
		self.sortSer=sorted(self.services,key=self.services.__getitem__, reverse=True)
		self.sortAct=sorted(self.activities,key=self.activities.__getitem__, reverse=True)
	def perAdd(self,permissions):
		for element in permissions:
			if element in self.permissions:
				self.permissions[element]+=1
			else:
				self.permissions[element]=1
	def harAdd(self,hardwareComponent):
		for element in hardwareComponent:
			if element in self.hardwareComponent:
				self.hardwareComponent[element]+=1
			else:
				self.hardwareComponent[element]=1
	def proAdd(self,providers):
		for element in providers:
			if element in self.providers:
				self.providers[element]+=1
			else:
				self.providers[element]=1
	def recAdd(self,receivers):
		for element in receivers:
			if element in self.receivers:
				self.receivers[element]+=1
			else:
				self.receivers[element]=1
	def serAdd(self,services):
		for element in services:
			if element in self.services:
				self.services[element]+=1
			else:
				self.services[element]=1
	def actAdd(self,activities):
		for element in activities:
			if element in self.activities:
				self.activities[element]+=1
			else:
				self.activities[element]=1
	def output(self):
		anal=open('analysis.txt','w')
		print("Permission number: %d"%(len(self.permissions)),file=anal)
		print("HardwareComponent number: %d"%(len(self.hardwareComponent)),file=anal)
		print("Providers number: %d"%(len(self.providers)),file=anal)
		print("Receivers number: %d"%(len(self.receivers)),file=anal)
		print("Services number: %d"%(len(self.services)),file=anal)
		print("Activities number: %d"%(len(self.activities)),file=anal)
		# print("For detail:",file=anal)
		# print("permissions:",self.sortPer[0],self.permissions[self.sortPer[0]],self.sortPer[1],self.permissions[self.sortPer[1]],self.sortPer[2],self.permissions[self.sortPer[2]],sep=' ',file=anal)
		# if len(self.hardwareComponent)>2:
		# 	print("hardwareComponent",self.sortHar[0],self.hardwareComponent[self.sortHar[0]],self.sortHar[1],self.hardwareComponent[self.sortHar[1]],self.sortHar[2],self.hardwareComponent[self.sortHar[2]],sep=' ',file=anal)
		# elif len(self.hardwareComponent)==2:
		# 	print("hardwareComponent",self.sortHar[0],self.hardwareComponent[self.sortHar[0]],self.sortHar[1],self.hardwareComponent[self.sortHar[1]],sep=' ',file=anal)
		# elif len(self.hardwareComponent)==1:
		# 	print("hardwareComponent",self.sortHar[0],self.hardwareComponent[self.sortHar[0]],sep=' ',file=anal)
		# else:
		# 	print("No hardwareComponent",file=anal)
		# if len(self.providers)>2:
		# 	print("providers",self.sortPro[0],self.providers[self.sortPro[0]],self.sortPro[1],self.providers[self.sortPro[1]],self.sortPro[2],self.providers[self.sortPro[2]],sep=' ',file=anal)
		# elif len(self.providers)==2:
		# 	print("providers",self.sortPro[0],self.providers[self.sortPro[0]],self.sortPro[1],self.providers[self.sortPro[1]],sep=' ',file=anal)
		# elif len(self.providers)==1:
		# 	print("providers",self.sortPro[0],self.providers[self.sortPro[0]],sep=' ',file=anal)				
		# else:
		# 	print("No providers",file=anal)
		# print("receivers",self.sortRec[0],self.receivers[self.sortRec[0]],self.sortRec[1],self.receivers[self.sortRec[1]],self.sortRec[2],self.receivers[self.sortRec[2]],sep=' ',file=anal)
		# print("services",self.sortSer[0],self.services[self.sortSer[0]],self.sortSer[1],self.services[self.sortSer[1]],self.sortSer[2],self.services[self.sortSer[2]],sep=' ',file=anal)
		# print("activities",self.sortAct[0],self.activities[self.sortAct[0]],sep=' ',file=anal)
		anal.close()
jsons=varity('/Users/dzih526/workspace/MalwareFeaturesCralwer/data/Boxer/manifest')
jsons.output()
